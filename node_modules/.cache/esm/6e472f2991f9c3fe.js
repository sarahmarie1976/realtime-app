_91f‍.x([["default",()=>_91f‍.o]]);const users = [];

const addUser = (username) => {
  const name = username.trim().toLowerCase();
  const existingUser = users.find((u) => u === name);
  if (!username.trim()) return {error: "Name is required" };
  if (existingUser) {
    return {
      error: "Name is taken",
    };
  } else {
    users.push(name);
    return username;
  }
};

const chat = (io) => {
  // MIDDLEWARE
  io.use((socket, next) => {
    const username = socket.handshake.auth.username;
    if(!username) {
      return next(new Error("invalid username"));
    }
    socket.username = username;
    next();
  });
    // console.log('live chat ---> ', io.opts);
    io.on("connection", (socket) => {
        console.log("socket id", socket.id);
        // socket.on("username", (username, next) => {
        //   // console.log("username", username);
        //   // io.emit("user joined", `${username} joined`);
        //   let result = addUser(username);
        //   if (result.error) {
        //     return next(result.error);
        //   } else {
        //     io.emit("users", users);
        //     socket.broadcast.emit("user joined", `${username} joined`);
        //   }
        // });

        let users = [];
        for(let [id, socket] of io.of('/').sockets) {
          const existingUser = user.find((u) => u.username === socket.username);
          if(existingUser) {
            socket.emit('username taken')
            socket.disconnect()
            return;
          } else {
            users.push({
              userID: id, 
              username: socket.username,
            });
          }
        }

        socket.emit("users", users);

        // WHEN A NEW USER JOINS, NOTIFY EXISTING USERS
        socket.broadcast.emit("user connected", {
          userID: socket.id, 
          username: socket.username,
        })

        // listening for message
        socket.on('message', message => {
            io.emit('message', message);
        });
        //disconnect
        socket.on("disconnect", () => {
            console.log("user disconnected")
        })
    });
    
}

_91f‍.d(chat);


